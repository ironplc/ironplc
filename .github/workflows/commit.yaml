name: Build and Test
on: [push]
jobs:
  ironplcc-tests:
    name: ironplcc Tests
    runs-on:  ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./compiler
    strategy:
        matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
        fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
      - uses: taiki-e/install-action@cargo-llvm-cov
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}

      # Do the format check first so because that is what is mostly likely to
      # be neglected.

      - name: Standard Rust format check
        run: cargo fmt --all -- --check

      - name: Clippy format check
        run: cargo clippy

      - name: Rust Tests with Coverage
        run: cargo llvm-cov --all-features --workspace --fail-under-lines 85 --show-missing-lines

  ironplcc-windows-installer:
    name: ironplcc Windows Installer
    runs-on: windows-latest
    defaults:
      run:
        working-directory: ./compiler
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install cargo-wix tool
        run: cargo install cargo-wix

      # Assumes the wix toolkit is available.
      - name: Create installer
        run: cargo wix -v --nocapture -o . -p ironplcc

  vscode-extension-tests:
    name: Visual Studio Code Extension Tests
    runs-on:  ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./integrations/vscode
    strategy:
        matrix:
          os: [ubuntu-latest, windows-latest, macos-latest]
        fail-fast: false
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          cache: npm
          cache-dependency-path: './integrations/vscode/package-lock.json'

      - name: Install X server components and Xvfb
        run: sudo apt update && sudo apt install -y libnss3 libatk1.0-0 libatk-bridge2.0-0 libdrm2 libgtk-3-0 libgbm1 libasound2 xvfb
        if: env.IRONPLC_INSTALL_DEPS != ''

      - name: Install dependencies
        run: npm install
      
      # Integration tests require Xvfb enabled environment, so use that to
      # run tests.
      - name: Build and Test
        run: xvfb-run -a npm run release
        if: runner.os == 'Linux'
      - name: Build and Test
        run: npm run release
        if: runner.os != 'Linux'

  docs:
    name: Documentation
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docs
    steps:
      - uses: actions/checkout@v3
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install doc dependencies
        run: pip3 install furo sphinx-inline-tabs pytz

      - name: Build docs
        run: sphinx-build -W -b html . _build
