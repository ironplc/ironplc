name: Version
on:
  # Allow triggering directly
  workflow_dispatch:
    inputs:
      commit-tag:
        required: false
        type: string
        description: 'If not empty, then run for the specified tag'
      gh-release-tag:
        required: false
        type: string
        default: ""
        description: 'The Github Release tag to publish to (empty value disables publishing)'
      version:
        required: false
        type: string
        default: "0.0.0"
        description: "The version number, such as 1.2.3"
  
  # Allow using this workflow from another workflow
  workflow_call:
    inputs:
      dryrun:
        type: boolean
        description: 'If set, run as a dry run and do not create the release artifacts'
        default: true
        
    secrets:
      IRONPLC_WORKFLOW_PUBLISH_ACCESS_TOKEN:
        required: true

    outputs:
      gh-release-id:
        description: The identifier for the Github release - a unique number
        value: ${{ jobs.release.outputs.gh-release-id }}
      gh-release-tag:
        description: The tag that is the Github release
        value: ${{ jobs.release.outputs.gh-release-tag }}
      commit-tag:
        description: The tag in the git repository (e.g. v1.0.0)
        value: ${{ jobs.release.outputs.commit-tag }}
      version:
        description: The version number of components (e.g. 1.0.0)
        value: ${{ jobs.release.outputs.version }}

jobs:
    release:
        name: Create Version Numbers and GitHub Release for the Artifacts
        # Only needs to run on one platform because this is defining
        # the container for the release rather than building the artifacts
        runs-on: ubuntu-latest
        
        outputs:
          # The identifier for the Github release - a unique number
          gh-release-id: ${{ steps.create-release.outputs.id }}
          # The tag that is the Github release
          gh-release-tag: v${{ steps.nextversion.outputs.version || '0.0.0' }}
          # The tag in the git repository (e.g. v1.0.0)
          commit-tag: ${{ steps.nextversion.outputs.version && format('v{0}', steps.nextversion.outputs.version) || 'HEAD' }}
          # The version number of components (e.g. 1.0.0)
          version: ${{ steps.nextversion.outputs.version || '0.0.0' }}
        
        steps:
          # Checkout the repository including the tags
          - uses: actions/checkout@v4
            with:
              fetch-depth: 0
              # This is a workaround for branch protections. In general, we want to
              # protect branches from changes, but we'll take the publish as special
              # because we need to create a new version number. This allows making
              # changes to the repository without removing the branch protections.
              token: ${{secrets.IRONPLC_WORKFLOW_PUBLISH_ACCESS_TOKEN}}
          - name: Git tags
            run: |
              git pull --tags
          
          # Configure the execution environment
          - uses: taiki-e/install-action@just
          - uses: actions-rust-lang/setup-rust-toolchain@v1
          - uses: actions/setup-node@v4

          # Execute build recipe
          - name: Get the next version number
            if: ${{ !inputs.dryrun }}
            id: nextversion
            run: echo "version=$(just get-next-version minor)" >> $GITHUB_OUTPUT
          - name: Update version number in the repository
            if: ${{ !inputs.dryrun }}
            run: just version ${{ steps.nextversion.outputs.version }}
          - name: Commit version number to repository
            if: ${{ !inputs.dryrun }}
            run: just commit-version "Continuous Integration" "garretfick@users.noreply.github.com" ${{ steps.nextversion.outputs.version }}
    
          # Save output artifacts
          - name: Push commit to the repository
            if: ${{ !inputs.dryrun }}
            run: |
              git push
              git push --tags
            
          - name: Create Github Release
            if: ${{ !inputs.dryrun }}
            id: create-release
            uses: softprops/action-gh-release@v1
            with:
              token: "${{ secrets.GITHUB_TOKEN }}"
              tag_name: v${{ steps.nextversion.outputs.minor }}
              draft: true
              prerelease: false
    