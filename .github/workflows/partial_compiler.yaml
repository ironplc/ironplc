name: IronPLC Compiler
on:
  # Allow triggering directly
  workflow_dispatch:
    inputs:
      commit-ref:
        required: false
        type: string
        description: 'If not empty, then run for the specified tag'
      gh-release-tag:
        required: false
        type: string
        default: ""
        description: 'The Github Release tag to publish to (empty value disables publishing)'
      version:
        required: false
        type: string
        default: "0.0.0"
        description: "The version number, such as 1.2.3"
  
  # Allow using this workflow from another workflow
  workflow_call:
    inputs:
      commit-ref:
        required: false
        type: string
        description: 'If not empty, then run for the specified tag'
      gh-release-tag:
        required: false
        type: string
        default: ""
        description: 'The Github Release tag to publish to (empty value disables publishing)'
      version:
        required: false
        type: string
        default: ""
        description: "The version number, such as 1.2.3"

jobs:
  compiler:
    name: Build Compiler and Associated Installers
    runs-on:  ${{ matrix.os }}
    defaults:
      run:
        working-directory: ./compiler
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: windows-latest
            artifact: ironplcc-x86_64-windows.exe
            rust_target: x86_64-pc-windows-msvc
          - os: windows-latest
            artifact: ironplcc-aarch64-windows.exe
            rust_target: aarch64-pc-windows-msvc
          - os: ubuntu-latest
            artifact: ironplcc-x86_64-linux-musl.tar.gz
            rust_target: x86_64-unknown-linux-musl
          - os: macos-latest
            artifact: ironplcc-x86_64-macos.tar.gz
            rust_target: x86_64-apple-darwin
          - os: macos-latest
            artifact: ironplcc-aarch64-macos.tar.gz
            rust_target: aarch64-apple-darwin

    steps:
      # Checkout the repository/fetch input artifacts
      - name: Checkout branch or tag ${{ inputs.commit-ref }}
        uses: actions/checkout@v4
        if: ${{ inputs.commit-ref }}
        with:
          ref: ${{ inputs.commit-ref  }}
      - name: Checkout HEAD
        uses: actions/checkout@v4
        if: ${{ !inputs.commit-ref }}

      # Configure the execution environment
      - uses: taiki-e/install-action@just
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          components: rustfmt, clippy
          target: ${{ matrix.rust_target }}
      - uses: taiki-e/install-action@cargo-llvm-cov

      # Execute build recipe
      - name: Build the compiler
        run: just ci
      - name: Create installer package
        run: just package ${{ inputs.version }} ${{ matrix.artifact }} ${{ matrix.rust_target }}

      # Save output artifacts
      - name: Upload compiler installer to build artifacts
        if: ${{ inputs.gh-release-tag }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}
          path: compiler/${{ matrix.artifact }}
          if-no-files-found: error

      - name: Upload Compiler Installer SHA256 to Build Artifacts
        if: ${{ inputs.gh-release-tag }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact }}.sha256
          path: compiler/${{ matrix.artifact }}.sha256
          if-no-files-found: error
      - name: Upload Compiler Installer to GitHub Release
        if: ${{ inputs.gh-release-tag }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          tag: ${{ inputs.gh-release-tag }}
          asset_name: ${{ matrix.artifact }}
          file: compiler/${{ matrix.artifact }}
      - name: Upload Compiler Installer SHA256 to GitHub Release
        if: ${{ inputs.gh-release-tag }}
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          tag: ${{ inputs.gh-release-tag }}
          asset_name: ${{ matrix.artifact }}.sha256
          file: compiler/${{ matrix.artifact }}.sha256
