{
  "name": "ironplc",
  "displayName": "IronPLC",
  "publisher": "garretfick",
  "description": "IntelliSense for IEC 61131-3",
  "version": "0.13.47",
  "icon": "images/logo.png",
  "engines": {
    "vscode": "^1.75.0"
  },
  "categories": [
    "Programming Languages"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/garretfick/ironplc.git",
    "directory": "integrations/vscode"
  },
  "activationEvents": [],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "ironplc.createNewStructuredTextFile",
        "title": "New Structured Text File",
        "shortTitle": "Structured Text File",
        "category": "IronPLC"
      },
      {
        "command": "ironplc.extensionDiagnostics",
        "title": "Extension Diagnostics",
        "category": "IronPLC"
      }
    ],
    "menus": {
      "file/newFile": [
        {
          "command": "ironplc.createNewStructuredTextFile",
          "group": "file",
          "when": "!virtualWorkspace"
        }
      ]
    },
    "configuration": {
      "title": "IronPLC",
      "properties": {
        "ironplc.path": {
          "markdownDescription": "Overrides the discovery of ironplcc application (ironplcc.exe on Windows). If empty, then discovers IronPLC based on the path variable.",
          "type": "string",
          "default": "",
          "editPresentation": "singlelineText"
        },
        "ironplc.compilerArguments": {
          "markdownDescription": "Compiler arguments for the language server provider. See ironplcc (ironplcc.exe on Windows) for expected values. The 'lsp' argument is added by default.",
          "type": "string",
          "default": "",
          "editPresentation": "singlelineText"
        }
      }
    },
    "languages": [
      {
        "id": "61131-3-st",
        "aliases": [
          "IEC 61131-3",
          "Structured Text"
        ],
        "extensions": [
          ".st"
        ],
        "configuration": "./decl/61131-3-st-language-configuration.json"
      }
    ],
    "grammars": [
      {
        "language": "61131-3-st",
        "scopeName": "source.61131-3-st",
        "path": "./syntaxes/61131-3-st.tmLanguage.json"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run esbuild-base -- --minify",
    "esbuild-base": "esbuild ./src/extension.ts --bundle --outfile=out/extension.js --external:vscode --format=cjs --platform=node",
    "esbuild": "npm run esbuild-base -- --sourcemap",
    "esbuild-watch": "npm run esbuild-base -- --sourcemap --watch",
    "test-compile": "tsc -p ./",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/test/runTest.js"
  },
  "devDependencies": {
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.x",
    "@types/vscode": "^1.75.0",
    "@typescript-eslint/eslint-plugin": "^6.0.0",
    "@typescript-eslint/parser": "^6.0.0",
    "@vscode/test-electron": "^2.2.3",
    "@vscode/vsce": "^2.19.0",
    "esbuild": "^0.19.0",
    "eslint": "^8.40.0",
    "glob": "^10.2.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.6"
  },
  "dependencies": {
    "vscode-languageclient": "^8.1.0"
  }
}
